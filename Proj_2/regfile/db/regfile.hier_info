|register
in[0] => in[0].IN1
in[1] => in[1].IN1
in[2] => in[2].IN1
in[3] => in[3].IN1
in[4] => in[4].IN1
in[5] => in[5].IN1
in[6] => in[6].IN1
in[7] => in[7].IN1
in[8] => in[8].IN1
in[9] => in[9].IN1
in[10] => in[10].IN1
in[11] => in[11].IN1
in[12] => in[12].IN1
in[13] => in[13].IN1
in[14] => in[14].IN1
in[15] => in[15].IN1
in[16] => in[16].IN1
in[17] => in[17].IN1
in[18] => in[18].IN1
in[19] => in[19].IN1
in[20] => in[20].IN1
in[21] => in[21].IN1
in[22] => in[22].IN1
in[23] => in[23].IN1
in[24] => in[24].IN1
in[25] => in[25].IN1
in[26] => in[26].IN1
in[27] => in[27].IN1
in[28] => in[28].IN1
in[29] => in[29].IN1
in[30] => in[30].IN1
in[31] => in[31].IN1
clock => clock.IN32
out[0] <= d_flip_flop:dff_loop[0].dff.Q
out[1] <= d_flip_flop:dff_loop[1].dff.Q
out[2] <= d_flip_flop:dff_loop[2].dff.Q
out[3] <= d_flip_flop:dff_loop[3].dff.Q
out[4] <= d_flip_flop:dff_loop[4].dff.Q
out[5] <= d_flip_flop:dff_loop[5].dff.Q
out[6] <= d_flip_flop:dff_loop[6].dff.Q
out[7] <= d_flip_flop:dff_loop[7].dff.Q
out[8] <= d_flip_flop:dff_loop[8].dff.Q
out[9] <= d_flip_flop:dff_loop[9].dff.Q
out[10] <= d_flip_flop:dff_loop[10].dff.Q
out[11] <= d_flip_flop:dff_loop[11].dff.Q
out[12] <= d_flip_flop:dff_loop[12].dff.Q
out[13] <= d_flip_flop:dff_loop[13].dff.Q
out[14] <= d_flip_flop:dff_loop[14].dff.Q
out[15] <= d_flip_flop:dff_loop[15].dff.Q
out[16] <= d_flip_flop:dff_loop[16].dff.Q
out[17] <= d_flip_flop:dff_loop[17].dff.Q
out[18] <= d_flip_flop:dff_loop[18].dff.Q
out[19] <= d_flip_flop:dff_loop[19].dff.Q
out[20] <= d_flip_flop:dff_loop[20].dff.Q
out[21] <= d_flip_flop:dff_loop[21].dff.Q
out[22] <= d_flip_flop:dff_loop[22].dff.Q
out[23] <= d_flip_flop:dff_loop[23].dff.Q
out[24] <= d_flip_flop:dff_loop[24].dff.Q
out[25] <= d_flip_flop:dff_loop[25].dff.Q
out[26] <= d_flip_flop:dff_loop[26].dff.Q
out[27] <= d_flip_flop:dff_loop[27].dff.Q
out[28] <= d_flip_flop:dff_loop[28].dff.Q
out[29] <= d_flip_flop:dff_loop[29].dff.Q
out[30] <= d_flip_flop:dff_loop[30].dff.Q
out[31] <= d_flip_flop:dff_loop[31].dff.Q


|register|d_flip_flop:dff_loop[0].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[0].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[0].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[0].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[0].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[0].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[0].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[0].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[0].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[0].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[0].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[0].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[0].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[0].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[1].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[1].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[1].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[1].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[1].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[1].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[1].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[1].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[1].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[1].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[1].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[1].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[1].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[1].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[2].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[2].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[2].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[2].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[2].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[2].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[2].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[2].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[2].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[2].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[2].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[2].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[2].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[2].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[3].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[3].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[3].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[3].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[3].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[3].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[3].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[3].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[3].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[3].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[3].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[3].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[3].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[3].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[4].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[4].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[4].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[4].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[4].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[4].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[4].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[4].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[4].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[4].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[4].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[4].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[4].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[4].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[5].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[5].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[5].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[5].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[5].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[5].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[5].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[5].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[5].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[5].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[5].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[5].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[5].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[5].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[6].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[6].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[6].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[6].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[6].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[6].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[6].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[6].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[6].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[6].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[6].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[6].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[6].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[6].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[7].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[7].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[7].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[7].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[7].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[7].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[7].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[7].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[7].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[7].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[7].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[7].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[7].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[7].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[8].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[8].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[8].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[8].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[8].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[8].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[8].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[8].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[8].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[8].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[8].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[8].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[8].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[8].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[9].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[9].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[9].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[9].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[9].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[9].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[9].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[9].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[9].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[9].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[9].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[9].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[9].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[9].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[10].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[10].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[10].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[10].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[10].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[10].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[10].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[10].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[10].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[10].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[10].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[10].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[10].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[10].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[11].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[11].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[11].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[11].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[11].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[11].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[11].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[11].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[11].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[11].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[11].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[11].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[11].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[11].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[12].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[12].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[12].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[12].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[12].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[12].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[12].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[12].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[12].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[12].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[12].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[12].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[12].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[12].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[13].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[13].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[13].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[13].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[13].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[13].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[13].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[13].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[13].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[13].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[13].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[13].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[13].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[13].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[14].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[14].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[14].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[14].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[14].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[14].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[14].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[14].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[14].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[14].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[14].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[14].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[14].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[14].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[15].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[15].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[15].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[15].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[15].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[15].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[15].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[15].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[15].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[15].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[15].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[15].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[15].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[15].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[16].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[16].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[16].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[16].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[16].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[16].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[16].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[16].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[16].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[16].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[16].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[16].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[16].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[16].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[17].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[17].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[17].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[17].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[17].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[17].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[17].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[17].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[17].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[17].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[17].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[17].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[17].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[17].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[18].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[18].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[18].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[18].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[18].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[18].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[18].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[18].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[18].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[18].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[18].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[18].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[18].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[18].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[19].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[19].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[19].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[19].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[19].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[19].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[19].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[19].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[19].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[19].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[19].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[19].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[19].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[19].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[20].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[20].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[20].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[20].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[20].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[20].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[20].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[20].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[20].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[20].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[20].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[20].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[20].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[20].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[21].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[21].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[21].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[21].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[21].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[21].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[21].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[21].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[21].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[21].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[21].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[21].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[21].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[21].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[22].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[22].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[22].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[22].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[22].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[22].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[22].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[22].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[22].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[22].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[22].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[22].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[22].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[22].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[23].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[23].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[23].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[23].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[23].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[23].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[23].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[23].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[23].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[23].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[23].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[23].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[23].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[23].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[24].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[24].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[24].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[24].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[24].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[24].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[24].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[24].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[24].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[24].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[24].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[24].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[24].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[24].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[25].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[25].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[25].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[25].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[25].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[25].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[25].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[25].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[25].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[25].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[25].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[25].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[25].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[25].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[26].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[26].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[26].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[26].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[26].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[26].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[26].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[26].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[26].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[26].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[26].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[26].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[26].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[26].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[27].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[27].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[27].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[27].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[27].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[27].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[27].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[27].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[27].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[27].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[27].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[27].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[27].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[27].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[28].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[28].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[28].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[28].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[28].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[28].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[28].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[28].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[28].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[28].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[28].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[28].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[28].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[28].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[29].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[29].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[29].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[29].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[29].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[29].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[29].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[29].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[29].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[29].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[29].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[29].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[29].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[29].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[30].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[30].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[30].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[30].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[30].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[30].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[30].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[30].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[30].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[30].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[30].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[30].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[30].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[30].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[31].dff
clock => clock.IN2
D => D.IN1
Q <= d_latch:dl2.port2
Qbar <= d_latch:dl2.port3


|register|d_flip_flop:dff_loop[31].dff|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[31].dff|d_latch:dl1
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[31].dff|d_latch:dl1|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[31].dff|d_latch:dl1|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[31].dff|d_latch:dl1|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[31].dff|d_latch:dl1|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[31].dff|d_latch:dl1|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[31].dff|d_latch:dl2
data => data.IN2
enable => enable.IN2
Q <= Q.DB_MAX_OUTPUT_PORT_TYPE
Qbar <= Qbar.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[31].dff|d_latch:dl2|not_gate:ng1
a => out.DATAIN
out <= a.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[31].dff|d_latch:dl2|and_gate:ag1
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[31].dff|d_latch:dl2|and_gate:ag2
a => my_and.IN0
b => my_and.IN1
out <= my_and.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[31].dff|d_latch:dl2|nor_gate:ng2
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


|register|d_flip_flop:dff_loop[31].dff|d_latch:dl2|nor_gate:ng3
a => my_norg.IN0
b => my_norg.IN1
out <= my_norg.DB_MAX_OUTPUT_PORT_TYPE


