// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.0.0 Build 614 04/24/2018 SJ Lite Edition"

// DATE "09/14/2023 15:12:56"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module nand_adder (
	in0,
	in1,
	carry_in,
	sum,
	carry_out);
input 	in0;
input 	in1;
input 	carry_in;
output 	sum;
output 	carry_out;

// Design Ports Information
// sum	=>  Location: PIN_V2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// carry_out	=>  Location: PIN_V1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// in0	=>  Location: PIN_V3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// in1	=>  Location: PIN_V4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// carry_in	=>  Location: PIN_U2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("nand_adder_7_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \sum~output_o ;
wire \carry_out~output_o ;
wire \in1~input_o ;
wire \in0~input_o ;
wire \carry_in~input_o ;
wire \ng9|my_nand~0_combout ;
wire \ng8|my_nand~0_combout ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y28_N16
cycloneive_io_obuf \sum~output (
	.i(\ng9|my_nand~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\sum~output_o ),
	.obar());
// synopsys translate_off
defparam \sum~output .bus_hold = "false";
defparam \sum~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y28_N23
cycloneive_io_obuf \carry_out~output (
	.i(\ng8|my_nand~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\carry_out~output_o ),
	.obar());
// synopsys translate_off
defparam \carry_out~output .bus_hold = "false";
defparam \carry_out~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y29_N15
cycloneive_io_ibuf \in1~input (
	.i(in1),
	.ibar(gnd),
	.o(\in1~input_o ));
// synopsys translate_off
defparam \in1~input .bus_hold = "false";
defparam \in1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y29_N22
cycloneive_io_ibuf \in0~input (
	.i(in0),
	.ibar(gnd),
	.o(\in0~input_o ));
// synopsys translate_off
defparam \in0~input .bus_hold = "false";
defparam \in0~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y30_N1
cycloneive_io_ibuf \carry_in~input (
	.i(carry_in),
	.ibar(gnd),
	.o(\carry_in~input_o ));
// synopsys translate_off
defparam \carry_in~input .bus_hold = "false";
defparam \carry_in~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y29_N16
cycloneive_lcell_comb \ng9|my_nand~0 (
// Equation(s):
// \ng9|my_nand~0_combout  = \in1~input_o  $ (\in0~input_o  $ (\carry_in~input_o ))

	.dataa(\in1~input_o ),
	.datab(\in0~input_o ),
	.datac(gnd),
	.datad(\carry_in~input_o ),
	.cin(gnd),
	.combout(\ng9|my_nand~0_combout ),
	.cout());
// synopsys translate_off
defparam \ng9|my_nand~0 .lut_mask = 16'h9966;
defparam \ng9|my_nand~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y29_N18
cycloneive_lcell_comb \ng8|my_nand~0 (
// Equation(s):
// \ng8|my_nand~0_combout  = (\in1~input_o  & ((\in0~input_o ) # (\carry_in~input_o ))) # (!\in1~input_o  & (\in0~input_o  & \carry_in~input_o ))

	.dataa(\in1~input_o ),
	.datab(\in0~input_o ),
	.datac(gnd),
	.datad(\carry_in~input_o ),
	.cin(gnd),
	.combout(\ng8|my_nand~0_combout ),
	.cout());
// synopsys translate_off
defparam \ng8|my_nand~0 .lut_mask = 16'hEE88;
defparam \ng8|my_nand~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign sum = \sum~output_o ;

assign carry_out = \carry_out~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_F4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_N7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_P28,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
